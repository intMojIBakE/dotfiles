# vim: ft=i3config

bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+t layout toggle split

bindsym $mod+f fullscreen
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+a focus parent

bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
#bindsym $mod+9 workspace number 9
#bindsym $mod+0 workspace number 10

bindsym $mod+Shift+1 move container to workspace number 1; workspace 1
bindsym $mod+Shift+2 move container to workspace number 2; workspace 2
bindsym $mod+Shift+3 move container to workspace number 3; workspace 3
bindsym $mod+Shift+4 move container to workspace number 4; workspace 4
bindsym $mod+Shift+5 move container to workspace number 5; workspace 5
bindsym $mod+Shift+6 move container to workspace number 6; workspace 6
bindsym $mod+Shift+7 move container to workspace number 7; workspace 7
bindsym $mod+Shift+8 move container to workspace number 8; workspace 8
#bindsym $mod+Shift+9 move container to workspace number 9
#bindsym $mod+Shift+0 move container to workspace number 10

bindsym $mod+Tab workspace back_and_forth

bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

bindsym $mod+bracketright workspace next
bindsym $mod+bracketleft workspace prev
bindsym $mod+Shift+bracketright move container to workspace next; workspace next
bindsym $mod+Shift+bracketleft move container to workspace prev; workspace prev


set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}


mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


bindsym $mod+Return exec $term
bindsym $mod+d exec $menu
bindsym $mod+Shift+q kill
bindsym $mod+Shift+r reload
bindsym $mod+Shift+Escape exit

mode "opacity (p)lus (m)inus" {
    bindsym p opacity plus 0.02
    bindsym m opacity minus 0.02
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+o mode "opacity (p)lus (m)inus"

set $mode_system (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec $locker, mode "default"
    bindsym s exec suspend, mode "default"
    bindsym h exec suspend, mode "default"
    bindsym r exec loginctl reboot, mode "default"
    bindsym Shift+s exec loginctl poweroff, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+0 mode "$mode_system"

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec light -U 5
bindsym XF86MonBrightnessUp exec light -A 5

bindsym $mod+s exec pavucontrol

bindsym $mod+9 exec $locker
bindsym $mod+Shift+9 exec $locker

bindsym $mod+Shift+f exec catfish

bindsym Print exec pic_file=$(date +"$HOME/Pictures/grim/%Y-%m-%d-%H%M%S-%s.png") && grim $pic_file && notify-send "Screenshot has saved to $pic_file"
bindsym Shift+Print exec pic_file=$(date +"$HOME/Pictures/grim/%Y-%m-%d-%H%M%S-%s.png") && grim -g "$(slurp)" $pic_file && cat $pic_file | wl-copy && notify-send "Screenshot has sent to clipboard"

bindsym $mod+Shift+n exec dunstctl close
